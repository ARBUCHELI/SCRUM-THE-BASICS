# 3. GETTING READY TO WORK
--------------------------

* Set the vision for your project
---------------------------------

* PRODUCT VISION
----------------
. Serves as a guide for your team.

. Established by the product owner.


* MINIMUM VIABLE PRODUCT (MVP)
------------------------------
. When a product has been developed just enough to get user feedback.

. Allows for a fast feedback loop.

. Reduces scope creep.


* EXAMPLE OF A PRODUCT VISION
-----------------------------
Help busy professionals have more time and feel healthier by providing a mobile app where they can quickly order an affordable, tasty, healthy lunch and have it delivered o pick it
up themselves.


* DECOMPOSING A VISION
----------------------
1. Identify themes.

2. Break themes into features.


			* EXAMPLE THEMES
			----------------
			. Profiles		. Payment
			. Order			. Delivery


. Themes trigger development ideas.

. Themes group work for efficiency and security.


			* EXAMPLE FEATURES FOR PROFILE
			 -----------------------------
			. Login
			. Save Password
			. Recent orders
			. Favorites
			. Recent locations


. In the example, an MVP would only need, security, login, and save password.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Write user stories
--------------------
Themes and features are still to big for a team to work on and deliver value in small timeframes.

			* WE ARE DELIVERING FOR CUSTOMERS OR USERS.  EACH INTERACTION THEY HAVE WITH OUR PRODUCT IS A USE CASE THAT TELLS THE TEAM A STORY.  WE CALL THESE, USER STORIES
			AND THIS IS THE LEVEL OF DETAIL WE NEED, TO KNOW WHAT TO DELIVER.


* USER STORY
------------
Detailed, valuable chunk of work a team can quickly deliver.  --> Usually written by the PO.

. When writting user stories, is a good idea to use the Bill Wakes I N V E S T acronym as a guide.

. I ndependent.

. N egotiable.

. V aluable.

. E stimable.

. S mall.

. T estable.

			* FORMAT FOR USER STORIES
			-------------------------

			As a <user role>, I want <user requirement> so that <desired benefit>.


* Example of a good user story for our Lunch Example App (Funcional User Story)
-------------------------------------------------------------------------------
As a MOBILE CUSTOMER, I want TO CREATE A PROFILE so that FUTURE ORDERS ARE FASTER TO PLACE. --> Example of a Functional User Story


* Nonfunctional story
---------------------
Work that supports users without directly benefiting them.


* Nonfunctional Story
---------------------
As a DEVELOPER, I want TO UPGRADE THE DATABASE SOFTWARE TO THE LATEST VERSION so that WE HAVE A SUPPORTED PRODUCT.


* AC (ACCEPTANCE CRITERIA)
--------------------------
This is needed to check that the work is being done.


* ACCEPTANCE CRITERIA EXAMPLE
-----------------------------
1. Customer name is captured and saved.

2. Customer email address is captured and saved.

3. Customer phone number is captured and saved.

4. Customer password is captured and saved.


------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Set boundaries for success
----------------------------

* Team Boundaries
-----------------
. Definition of done

. Backlog prioritization

. Sprint cadence


* Definition of done
--------------------
Minimum requirements have beem met for ALL stories.


* Done Example
---------------
. For a story on our team to be considered done, it has been tested in the prerelease environment.

. For a story on our team to be considered done, it has been code reviewed and all errors fixed.



* Backlog refinement
--------------------
Stories are sequenced or prioritized by value.

			* REMEMBET, SCRUM ALLOWS FLEXIBILITY IN SCOPE, BUT IS LOCKED IN DURATION, SO THE PO WANTS THE MOST VALUABLE STUFF DELIVERED FIRST.


* Establish your sprint
-----------------------
A sprint can be anywhere from one to four weeks in lenght with a preference toward the shorter time scale.

It's better to stablish the shorted feasible sprint length you can.

			* TRY A TWO-WEEK SPRINT CADENCE.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Story points and estimation in scrum
--------------------------------------

* Actual Estimate
-----------------
For example when you are reading a map that says: It's 25 miles from point A to point B.


* Relative Estimate
-------------------
When comparing things to each other to get a general idea about something.  For example when saying that a giraffe is twice the size of a zebra.

			* A RELATIVE ESTIMATE IS NOT A COMMITMENT.

			* USE STORY POINTS TO CONVEY RELATIVE SIZES.

------------------------------------------------------------------------------------------------------------------------------------------------------------------


































































			
